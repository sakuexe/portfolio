---
import type { 
  ProjectDetailsContentModel,
  PersonElementModel
} from "../../client";
import LinkWithIcon from "../../components/LinkWithIcon.astro";

import "../../styles/global.css";

interface Props {
  model: ProjectDetailsContentModel
}

const { model } = Astro.props;

const teamMembers = model.properties?.team?.items.map(item => item.content) as PersonElementModel[]
---

<style>
/* <div class="w-full h-1/2 bg-gradient-to-t from-primary to-transparent  */
/* absolute bottom-0 left-0 z-10"></div> */
.grid-pattern::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  /* background-image: linear-gradient(from bottom, var(--color-primary) 0%, transparent 100%); */
  background-image: linear-gradient(from bottom, red 0%, transparent 100%);
}
</style>

<section class="no-container mt-16 max-w-content mx-auto">

  <div class="max-h-96 overflow-clip relative w-full 
    h-full shadow-inner aspect-video motion-safe:transition-[max-height]">
  { model.properties?.images && model.properties.images.length != 0 
    ? <div class="grid-pattern opacity-50 w-full aspect-video"></div>
  : (<img 
    id="portfolio-image"
    src="@GetImageUrl(Model.ImageUrl)" 
    alt="@(Model.AltText ?? $Image of the {Model.Title} project)"
    loading="lazy" 
    decoding="async"
    class="w-full h-full object-cover saturate-0
    motion-safe:transition-all motion-safe:group-hover:scale-110 group-hover:saturate-50">
      <button type="button" id="expand" 
        class="absolute bottom-0 right-0 bg-primary px-6 py-2 rounded-tl-xl z-20 ">Expand</button>
      <div class="w-full h-1/2 bg-gradient-to-t from-primary to-transparent 
      absolute bottom-0 left-0 z-10 max-h-40 opacity-50"></div>)
    }
    <!-- Color the black and white images to match the theme -->
    <div class="bg-secondary h-full w-full opacity-25 mix-blend-multiply
    absolute bottom-0 left-0 motion-safe:transition-all group-hover:opacity-25">
    </div>
  </div>

  <div class="px-5 py-8 grid gap-y-6 gap-x-16 sm:px-10 xl:grid-cols-3">
    <div class="space-y-6 xl:col-span-2">
      <div class="subheader">
        <p><span>//</span> Project</p>
        <h1>@Model.Title</h1>
      </div>

      <div class="flex flex-wrap gap-2">
        { model.properties?.tags?.map(tag => 
              <span class="border border-secondary px-6 py-1.5 rounded-full cursor-default
          select-none capitalize motion-safe:transition-all hover:bg-secondary">{tag}</span>
        )}
      </div>

      <div class="flex gap-2 items-center">
        <span class="opacity-75 italic">@Model.FinishedAt</span>
        <hr class="w-full border-primary-700">
      </div>

      <div class="space-y-6">
        <Fragment set:html={model.properties?.details?.markup}>
      </div>
    </div>

    <hr class="border-primary-700 xl:hidden">

    <div class="flex gap-y-6 gap-x-16 flex-wrap content-start py-6 px-4 
      border-primary-700 rounded-lg">
      <div>
        <div>
          <p><span class="text-secondary-400">//</span> Credits</p>
          <h2 class="text-4xl font-bold font-sans">The Team</h2>
        </div>
        { teamMembers.length == 0 && <p>Just me</p> }
        { teamMembers.map(member => (
          <div class="flex gap-2 items-center">
            <ul>
              <li>
                <p class="capitalize">{member.properties?.displayName}</p> 
                { member.properties?.links?.map(link => (
                  <LinkWithIcon link={link} />
                ))}
              </li>
            </ul>
          </div>
        ))}
      </div>

      <div>
        <div>
          <p><span class="text-secondary-400">//</span> Links</p>
          <h2 class="text-4xl font-bold font-sans">Find out more</h2>
        </div>
        <ul class="space-y-2">
          { model.properties?.links?.length === 0 && <li>No links found</li>}
          { model.properties?.links?.map(link => (
            <li>
              <LinkWithIcon link={link} />
            </li>
          ))}
        </ul>
      </div>

    </div>

  </div>
</section>
