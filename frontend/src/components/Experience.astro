---
import type { 
  ProfessionalBackgroundContentModel,
  ExperienceContentModel,
} from "../client";
import { GetContent, GetChildContent } from "../utils/umbraco";
import ExperienceCard from "./ExperienceCard.astro"

const model = await GetContent<ProfessionalBackgroundContentModel>("/home/professional-background");
const experiences = await GetChildContent<ExperienceContentModel>("/home/professional-background")

const ongoingExperiences = experiences.items
.filter(exp => !exp.properties?.endTime)
.sort((a, b) => {
  const firstTime = new Date(a.properties?.startTime ?? 0).getTime();
  const secondTime = new Date(b.properties?.startTime ?? 0).getTime();

  return secondTime - firstTime
});

experiences.items = experiences.items.sort((a, b) => {
  const firstTime = new Date(a.properties?.endTime ?? 0).getTime();
  const secondTime = new Date(b.properties?.endTime ?? 0).getTime();

  return secondTime - firstTime
}).filter(exp => exp.properties?.endTime);

// add the ongoing experiences to the start of the array
experiences.items = [...ongoingExperiences, ...experiences.items];
---

<style>
#experience {
  padding-block: 5rem;
  max-width: 100rem;
  margin-inline: auto;
}

#experience > *:not(:last-child) {
  margin-bottom: 4rem;
}

#experience > div:has(.subheader) {
  max-width: 56rem;
}

#experience > div:has(.subheader) > *:not(:last-child) {
  margin-bottom: 1rem;
}

.experience-list {
  display: grid;
  /* make all the rows the same height (based on the tallest row)*/
  grid-auto-rows: 1fr;
  gap: 4rem;
  @media (min-width: 1024px) {
    row-gap: 2.5rem;
  }
}
</style>

<section id="experience" class="no-container">

  <div class="section-padding">
    <div class="subheader">
      <p><span>// 05</span> Experience</p>
      <h2>{model.name}</h2>
    </div>
    <Fragment set:html={model.properties?.description?.markup} />
  </div>
  
  <div class="experience-list">
    {experiences.items.map(exp => (
        <ExperienceCard experience={exp} />
    ))}
  </div>
</section>
