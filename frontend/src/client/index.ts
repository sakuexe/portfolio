// This file is auto-generated by @hey-api/openapi-ts

export type AboutMeElementModel = IApiElementModelBase & {
    contentType: 'aboutMe';
} & {
    properties?: AboutMePropertiesModel;
};

export type AboutMePropertiesModel = {
    heading?: string | null;
    description?: RichTextModel;
    cvFile?: Array<IApiMediaWithCropsModel> | null;
};

export type ApiBlockGridAreaModel = {
    alias: string;
    rowSpan: number;
    columnSpan: number;
    items: Array<ApiBlockGridItemModel>;
};

export type ApiBlockGridItemModel = ApiBlockItemModel & {
    rowSpan?: number;
    columnSpan?: number;
    areaGridColumns?: number;
    areas?: Array<ApiBlockGridAreaModel>;
};

export type ApiBlockItemModel = {
    content: IApiElementModel;
    settings?: IApiElementModel;
};

export type ApiBlockListModel = {
    items: Array<ApiBlockItemModel | ApiBlockGridItemModel>;
};

export type ApiContentRouteModel = {
    path: string;
    startItem: ApiContentStartItemModel;
};

export type ApiContentStartItemModel = {
    id: string;
    path: string;
};

export type ApiLinkModel = {
    readonly url?: string | null;
    readonly queryString?: string | null;
    readonly title?: string | null;
    readonly target?: string | null;
    readonly destinationId?: string | null;
    readonly destinationType?: string | null;
    route?: ApiContentRouteModel | null;
    linkType: LinkTypeModel;
};

export type ContactElementModel = IApiElementModelBase & {
    contentType: 'contact';
} & {
    properties?: ContactPropertiesModel;
};

export type ContactPropertiesModel = {
    heading?: string | null;
    description?: RichTextModel;
    emailAddress?: string | null;
    links?: Array<ApiLinkModel> | null;
};

export type ExperienceContentModel = IApiContentModelBase & {
    contentType: 'experience';
} & {
    properties?: ExperiencePropertiesModel;
};

export type ExperienceContentResponseModel = IApiContentResponseModelBase & {
    contentType: 'experience';
} & ExperienceContentModel;

export type ExperiencePropertiesModel = {
    role?: string | null;
    organization?: string | null;
    location?: string | null;
    description?: RichTextModel;
    startTime?: string | null;
    endTime?: string | null;
    tags?: Array<string> | null;
    image?: Array<IApiMediaWithCropsModel> | null;
    alternativeText?: string | null;
};

export type ExperiencesElementModel = IApiElementModelBase & {
    contentType: 'experiences';
} & {
    properties?: ExperiencesPropertiesModel;
};

export type ExperiencesPropertiesModel = {
    heading?: string | null;
    description?: RichTextModel;
};

export type ExpertiseCardElementModel = IApiElementModelBase & {
    contentType: 'expertiseCard';
} & {
    properties?: ExpertiseCardPropertiesModel;
};

export type ExpertiseCardPropertiesModel = {
    heading?: string | null;
    description?: string | null;
    icon?: Array<IApiMediaWithCropsModel> | null;
};

export type ExpertiseElementModel = IApiElementModelBase & {
    contentType: 'expertise';
} & {
    properties?: ExpertisePropertiesModel;
};

export type ExpertisePropertiesModel = {
    heading?: string | null;
    cards?: ApiBlockListModel;
};

export type HelloWorldContentModel = IApiContentModelBase & {
    contentType: 'helloWorld';
} & {
    properties?: HelloWorldPropertiesModel;
};

export type HelloWorldContentResponseModel = IApiContentResponseModelBase & {
    contentType: 'helloWorld';
} & HelloWorldContentModel;

export type HelloWorldPropertiesModel = {
    greeting?: string | null;
    image?: Array<IApiMediaWithCropsModel> | null;
};

export type HttpValidationProblemDetails = ProblemDetails & {
    errors?: {
        [key: string]: Array<string>;
    };
    [key: string]: unknown | {
        [key: string]: Array<string>;
    } | undefined;
};

export type IApiContentModel = HelloWorldContentModel | ProjectsContainerContentModel | ProjectDetailsContentModel | ProfessionalBackgroundContentModel | ExperienceContentModel | SiteContentModel;

export type IApiContentModelBase = IApiElementModelBase & {
    readonly contentType: string;
    readonly name?: string | null;
    readonly createDate: string;
    readonly updateDate: string;
    route: ApiContentRouteModel;
};

export type IApiContentResponseModel = HelloWorldContentResponseModel | ProjectsContainerContentResponseModel | ProjectDetailsContentResponseModel | ProfessionalBackgroundContentResponseModel | ExperienceContentResponseModel | SiteContentResponseModel;

export type IApiContentResponseModelBase = IApiContentModelBase & {
    contentType: 'IApiContentResponseModelBase';
} & {
    readonly id: string;
    readonly contentType: string;
    readonly name?: string | null;
    readonly createDate: string;
    readonly updateDate: string;
    route: ApiContentRouteModel;
    readonly cultures: {
        [key: string]: ApiContentRouteModel;
    };
};

export type IApiElementModel = ExpertiseCardElementModel | ProgressBarElementModel | IconWithLabelElementModel | PersonElementModel | ContactElementModel | AboutMeElementModel | ExpertiseElementModel | SkillsElementModel | ProjectsElementModel | ExperiencesElementModel;

export type IApiElementModelBase = {
    readonly id: string;
    readonly contentType: string;
};

export type IApiMediaWithCropsModel = {
    readonly id: string;
    readonly name: string;
    readonly mediaType: string;
    readonly url: string;
    readonly extension?: string | null;
    readonly width?: number | null;
    readonly height?: number | null;
    readonly bytes?: number | null;
    readonly properties: {
        [key: string]: unknown;
    };
    focalPoint?: ImageFocalPointModel;
    readonly crops?: Array<ImageCropModel> | null;
};

export type IApiMediaWithCropsResponseModel = {
    readonly id: string;
    readonly name: string;
    readonly mediaType: string;
    readonly url: string;
    readonly extension?: string | null;
    readonly width?: number | null;
    readonly height?: number | null;
    readonly bytes?: number | null;
    readonly properties: {
        [key: string]: unknown;
    };
    focalPoint: ImageFocalPointModel;
    readonly crops?: Array<ImageCropModel> | null;
    readonly path: string;
    readonly createDate: string;
    readonly updateDate: string;
};

export type IconWithLabelElementModel = IApiElementModelBase & {
    contentType: 'iconWithLabel';
} & {
    properties?: IconWithLabelPropertiesModel;
};

export type IconWithLabelPropertiesModel = {
    icon?: Array<IApiMediaWithCropsModel> | null;
    label?: string | null;
};

export type ImageCropCoordinatesModel = {
    x1: number;
    y1: number;
    x2: number;
    y2: number;
};

export type ImageCropModel = {
    alias?: string | null;
    width: number;
    height: number;
    coordinates?: ImageCropCoordinatesModel;
};

export type ImageFocalPointModel = {
    left: number;
    top: number;
};

export type LinkTypeModel = 'Content' | 'Media' | 'External';

export type PagedIApiContentResponseModel = {
    total: number;
    items: Array<IApiContentResponseModel>;
};

export type PagedIApiMediaWithCropsResponseModel = {
    total: number;
    items: Array<IApiMediaWithCropsResponseModel>;
};

export type PersonElementModel = IApiElementModelBase & {
    contentType: 'person';
} & {
    properties?: PersonPropertiesModel;
};

export type PersonPropertiesModel = {
    displayName?: string | null;
    role?: string | null;
    comments?: string | null;
    links?: Array<ApiLinkModel> | null;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | undefined;
};

export type ProfessionalBackgroundContentModel = IApiContentModelBase & {
    contentType: 'professionalBackground';
} & {
    properties?: ProfessionalBackgroundPropertiesModel;
};

export type ProfessionalBackgroundContentResponseModel = IApiContentResponseModelBase & {
    contentType: 'professionalBackground';
} & ProfessionalBackgroundContentModel;

export type ProfessionalBackgroundPropertiesModel = {
    description?: RichTextModel;
};

export type ProgressBarElementModel = IApiElementModelBase & {
    contentType: 'progressBar';
} & {
    properties?: ProgressBarPropertiesModel;
};

export type ProgressBarPropertiesModel = {
    label?: string | null;
    value?: number | null;
};

export type ProjectDetailsContentModel = IApiContentModelBase & {
    contentType: 'projectDetails';
} & {
    properties?: ProjectDetailsPropertiesModel;
};

export type ProjectDetailsContentResponseModel = IApiContentResponseModelBase & {
    contentType: 'projectDetails';
} & ProjectDetailsContentModel;

export type ProjectDetailsPropertiesModel = {
    tags?: Array<string> | null;
    details?: RichTextModel;
    startingTime?: string | null;
    endTime?: string | null;
    links?: Array<ApiLinkModel> | null;
    team?: ApiBlockListModel;
    image?: Array<IApiMediaWithCropsModel> | null;
    altText?: string | null;
};

export type ProjectsContainerContentModel = IApiContentModelBase & {
    contentType: 'projectsContainer';
} & {
    properties?: ProjectsContainerPropertiesModel;
};

export type ProjectsContainerContentResponseModel = IApiContentResponseModelBase & {
    contentType: 'projectsContainer';
} & ProjectsContainerContentModel;

export type ProjectsContainerPropertiesModel = {
    [key: string]: never;
};

export type ProjectsElementModel = IApiElementModelBase & {
    contentType: 'projects';
} & {
    properties?: ProjectsPropertiesModel;
};

export type ProjectsPropertiesModel = {
    heading?: string | null;
    description?: RichTextModel;
    featuredProject?: Array<IApiContentModel> | null;
    filterableCategories?: Array<string> | null;
};

export type RichTextModel = {
    markup: string;
    blocks: Array<ApiBlockItemModel | ApiBlockGridItemModel>;
};

export type SiteContentModel = IApiContentModelBase & {
    contentType: 'site';
} & {
    properties?: SitePropertiesModel;
};

export type SiteContentResponseModel = IApiContentResponseModelBase & {
    contentType: 'site';
} & SiteContentModel;

export type SitePropertiesModel = {
    pageContent?: ApiBlockListModel;
};

export type SkillsElementModel = IApiElementModelBase & {
    contentType: 'skills';
} & {
    properties?: SkillsPropertiesModel;
};

export type SkillsPropertiesModel = {
    heading?: string | null;
    description?: RichTextModel;
    skillItems?: ApiBlockListModel;
};

export type GetContent20Data = {
    body?: never;
    headers?: {
        /**
         * Defines the language to return. Use this when querying language variant content items.
         */
        'Accept-Language'?: string;
        /**
         * Defines the segment to return. Use this when querying segment variant content items.
         */
        'Accept-Segment'?: string;
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
        /**
         * Whether to request draft content.
         */
        Preview?: boolean;
        /**
         * URL segment or GUID of a root content item.
         */
        'Start-Item'?: string;
    };
    path?: never;
    query?: {
        /**
         * Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        fetch?: string;
        /**
         * Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        filter?: Array<string>;
        /**
         * Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        sort?: Array<string>;
        /**
         * Specifies the number of found content items to skip. Use this to control pagination of the response.
         */
        skip?: number;
        /**
         * Specifies the number of found content items to take. Use this to control pagination of the response.
         */
        take?: number;
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/content';
};

export type GetContent20Errors = {
    /**
     * Bad Request
     */
    400: ProblemDetails | HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetContent20Error = GetContent20Errors[keyof GetContent20Errors];

export type GetContent20Responses = {
    /**
     * OK
     */
    200: PagedIApiContentResponseModel;
};

export type GetContent20Response = GetContent20Responses[keyof GetContent20Responses];

export type GetContentItemByPath20Data = {
    body?: never;
    headers?: {
        /**
         * Defines the language to return. Use this when querying language variant content items.
         */
        'Accept-Language'?: string;
        /**
         * Defines the segment to return. Use this when querying segment variant content items.
         */
        'Accept-Segment'?: string;
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
        /**
         * Whether to request draft content.
         */
        Preview?: boolean;
        /**
         * URL segment or GUID of a root content item.
         */
        'Start-Item'?: string;
    };
    path: {
        path: string;
    };
    query?: {
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/content/item/{path}';
};

export type GetContentItemByPath20Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetContentItemByPath20Responses = {
    /**
     * OK
     */
    200: IApiContentResponseModel;
};

export type GetContentItemByPath20Response = GetContentItemByPath20Responses[keyof GetContentItemByPath20Responses];

export type GetContentItemById20Data = {
    body?: never;
    headers?: {
        /**
         * Defines the language to return. Use this when querying language variant content items.
         */
        'Accept-Language'?: string;
        /**
         * Defines the segment to return. Use this when querying segment variant content items.
         */
        'Accept-Segment'?: string;
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
        /**
         * Whether to request draft content.
         */
        Preview?: boolean;
        /**
         * URL segment or GUID of a root content item.
         */
        'Start-Item'?: string;
    };
    path: {
        id: string;
    };
    query?: {
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/content/item/{id}';
};

export type GetContentItemById20Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetContentItemById20Responses = {
    /**
     * OK
     */
    200: IApiContentResponseModel;
};

export type GetContentItemById20Response = GetContentItemById20Responses[keyof GetContentItemById20Responses];

export type GetContentItems20Data = {
    body?: never;
    headers?: {
        /**
         * Defines the language to return. Use this when querying language variant content items.
         */
        'Accept-Language'?: string;
        /**
         * Defines the segment to return. Use this when querying segment variant content items.
         */
        'Accept-Segment'?: string;
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
        /**
         * Whether to request draft content.
         */
        Preview?: boolean;
        /**
         * URL segment or GUID of a root content item.
         */
        'Start-Item'?: string;
    };
    path?: never;
    query?: {
        id?: Array<string>;
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/content/items';
};

export type GetContentItems20Errors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Forbidden
     */
    403: unknown;
};

export type GetContentItems20Responses = {
    /**
     * OK
     */
    200: Array<IApiContentResponseModel>;
};

export type GetContentItems20Response = GetContentItems20Responses[keyof GetContentItems20Responses];

export type GetMedia20Data = {
    body?: never;
    headers?: {
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
    };
    path?: never;
    query?: {
        /**
         * Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        fetch?: string;
        /**
         * Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        filter?: Array<string>;
        /**
         * Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        sort?: Array<string>;
        /**
         * Specifies the number of found media items to skip. Use this to control pagination of the response.
         */
        skip?: number;
        /**
         * Specifies the number of found media items to take. Use this to control pagination of the response.
         */
        take?: number;
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/media';
};

export type GetMedia20Errors = {
    /**
     * Bad Request
     */
    400: ProblemDetails | HttpValidationProblemDetails;
};

export type GetMedia20Error = GetMedia20Errors[keyof GetMedia20Errors];

export type GetMedia20Responses = {
    /**
     * OK
     */
    200: PagedIApiMediaWithCropsResponseModel;
};

export type GetMedia20Response = GetMedia20Responses[keyof GetMedia20Responses];

export type GetMediaItemByPath20Data = {
    body?: never;
    headers?: {
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
    };
    path: {
        path: string;
    };
    query?: {
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/media/item/{path}';
};

export type GetMediaItemByPath20Errors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetMediaItemByPath20Responses = {
    /**
     * OK
     */
    200: IApiMediaWithCropsResponseModel;
};

export type GetMediaItemByPath20Response = GetMediaItemByPath20Responses[keyof GetMediaItemByPath20Responses];

export type GetMediaItemById20Data = {
    body?: never;
    headers?: {
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
    };
    path: {
        id: string;
    };
    query?: {
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/media/item/{id}';
};

export type GetMediaItemById20Errors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetMediaItemById20Responses = {
    /**
     * OK
     */
    200: IApiMediaWithCropsResponseModel;
};

export type GetMediaItemById20Response = GetMediaItemById20Responses[keyof GetMediaItemById20Responses];

export type GetMediaItems20Data = {
    body?: never;
    headers?: {
        /**
         * API key specified through configuration to authorize access to the API.
         */
        'Api-Key'?: string;
    };
    path?: never;
    query?: {
        id?: Array<string>;
        /**
         * Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        expand?: string;
        /**
         * Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
         */
        fields?: string;
    };
    url: '/umbraco/delivery/api/v2/media/items';
};

export type GetMediaItems20Responses = {
    /**
     * OK
     */
    200: Array<IApiMediaWithCropsResponseModel>;
};

export type GetMediaItems20Response = GetMediaItems20Responses[keyof GetMediaItems20Responses];

export type ClientOptions = {
    baseUrl: 'http://localhost:46118' | (string & {});
};